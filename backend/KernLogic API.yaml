openapi: 3.0.3
info:
  title: KernLogic API
  version: 1.0.0
  description: Inventory and product management API
paths:
  /token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /orgs/{org_id}/:
    get:
      operationId: orgs_retrieve
      parameters:
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /orgs/{org_id}/memberships/{id}/avatar/:
    post:
      operationId: orgs_memberships_avatar_create
      description: |-
        Handle membership avatar uploads, viewing, and deletion.

        - GET: Return the avatar URL
        - POST: Upload a new avatar
        - DELETE: Remove the existing avatar
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: orgs_memberships_avatar_destroy
      description: |-
        Handle membership avatar uploads, viewing, and deletion.

        - GET: Return the avatar URL
        - POST: Upload a new avatar
        - DELETE: Remove the existing avatar
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: orgs_memberships_avatar_retrieve
      description: |-
        Handle membership avatar uploads, viewing, and deletion.

        - GET: Return the avatar URL
        - POST: Upload a new avatar
        - DELETE: Remove the existing avatar
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /analytics/completeness-export/:
    get:
      operationId: analytics_completeness_export_retrieve
      description: Direct function-based view for exporting completeness report
      tags:
      - analytics
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /analytics/readiness-export/:
    get:
      operationId: analytics_readiness_export_retrieve
      description: Direct function-based view for exporting readiness report
      tags:
      - analytics
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /analytics/enrichment-velocity-export/:
    get:
      operationId: analytics_enrichment_velocity_export_retrieve
      description: Direct function-based view for exporting enrichment velocity report
      tags:
      - analytics
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /analytics/localization-quality-export/:
    get:
      operationId: analytics_localization_quality_export_retrieve
      description: Direct function-based view for exporting localization quality report
      tags:
      - analytics
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /analytics/change-history-export/:
    get:
      operationId: analytics_change_history_export_retrieve
      description: Direct function-based view for exporting change history report
      tags:
      - analytics
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /products/:
    post:
      operationId: products_create
      description: Create a new product
      tags:
      - products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    get:
      operationId: products_list
      description: API endpoint for managing product data.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
  /products/brands/:
    get:
      operationId: products_brands_retrieve
      description: Return a list of unique brands for dropdown menus.
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /products/bulk_create/:
    post:
      operationId: products_bulk_create_create
      description: Create multiple products at once from a CSV upload or bulk input.
      tags:
      - products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /products/bulk_delete/:
    post:
      operationId: products_bulk_delete_create
      description: |-
        Permanently delete multiple products at once.
        Expects: ids (list of product IDs)
      tags:
      - products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /products/bulk_update/:
    post:
      operationId: products_bulk_update_create
      description: |-
        Update a field for multiple products at once.
        Expects: ids (list of product IDs), field (string), and the value to set.
        For tags, expects 'tags' array instead of a single value.
      tags:
      - products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /products/categories/:
    post:
      operationId: products_categories_create
      description: |-
        GET: Return a list of unique categories for dropdown menus.
        POST: Create a new category by adding a product with that category.
      tags:
      - products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    get:
      operationId: products_categories_retrieve
      description: |-
        GET: Return a list of unique categories for dropdown menus.
        POST: Create a new category by adding a product with that category.
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /products/cleanup_category_placeholders/:
    post:
      operationId: products_cleanup_category_placeholders_create
      description: Remove all category placeholder products (created when adding categories)
      tags:
      - products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /products/stats/:
    get:
      operationId: products_stats_retrieve
      description: Return basic statistics about products
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /products/tags/:
    post:
      operationId: products_tags_create
      description: |-
        GET: Return a list of unique tags from all products.
        POST: Create a new tag by adding it to a "tag repository" product or returning an existing tag.
      tags:
      - products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    get:
      operationId: products_tags_retrieve
      description: |-
        GET: Return a list of unique tags from all products.
        POST: Create a new tag by adding it to a "tag repository" product or returning an existing tag.
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /products/{id}/:
    patch:
      operationId: products_partial_update
      description: API endpoint for managing product data.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: products_destroy
      description: Soft delete by setting is_archived=True or permanently delete if
        requested
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: products_retrieve
      description: API endpoint for managing product data.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /products/{id}/related-add/:
    post:
      operationId: products_related_add_create
      description: Add a related product to this product
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /products/{id}/explicit-relations/:
    get:
      operationId: products_explicit_relations_retrieve
      description: |-
        Return only the explicitly related products through ProductRelation model.
        Does not include category matches.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /products/{id}/images/{image_pk}/:
    patch:
      operationId: products_images_partial_update
      description: API endpoint for managing product data.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      - in: path
        name: image_pk
        schema:
          type: string
        required: true
      tags:
      - products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: products_images_destroy
      description: API endpoint for managing product data.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      - in: path
        name: image_pk
        schema:
          type: string
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /products/{id}/related/{related_id}/:
    patch:
      operationId: products_related_partial_update
      description: Update or delete a related product relationship
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      - in: path
        name: related_id
        schema:
          type: string
        required: true
      tags:
      - products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: products_related_destroy
      description: Update or delete a related product relationship
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      - in: path
        name: related_id
        schema:
          type: string
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /products/{id}/related-list/:
    get:
      operationId: products_related_list_retrieve
      description: |-
        Return a list of related products based on the same category.
        Excludes the source product from the results.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /products/{id}/images/reorder/:
    patch:
      operationId: products_images_reorder_partial_update
      description: API endpoint for managing product data.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /products/{id}/set_primary/:
    post:
      operationId: products_set_primary_create
      description: API endpoint for managing product data.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /products/{id}/images/:
    post:
      operationId: products_images_create
      description: API endpoint for managing product data.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /dashboard/activity/:
    get:
      operationId: dashboard_activity_retrieve
      description: Return recent activity data (limit 10)
      tags:
      - dashboard
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /dashboard/incomplete-products/:
    get:
      operationId: dashboard_incomplete_products_retrieve
      description: Return the top 5 incomplete products
      tags:
      - dashboard
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /dashboard/inventory-trend/:
    get:
      operationId: dashboard_inventory_trend_retrieve
      description: Return inventory value trend data for the specified time range
      tags:
      - dashboard
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /dashboard/summary/:
    get:
      operationId: dashboard_summary_retrieve
      description: |-
        Return dashboard summary data:
        - KPI numbers (total products, inventory value, inactive products, team members)
        - Data completeness percentage
        - Most missing fields
        - Product status counts
      tags:
      - dashboard
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /products/{product_pk}/history/:
    get:
      operationId: products_history_list
      description: |-
        A mixin that filters querysets by the user's organization.

        This mixin should be applied to viewsets that need to filter
        models that have an organization foreign key.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: product_pk
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductEventList'
          description: ''
  /attribute-sets/{id}/:
    get:
      operationId: attribute_sets_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - attribute-sets
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /attributes/:
    post:
      operationId: attributes_create
      description: Create a new attribute for the current organization. Staff only.
      summary: Create a new attribute
      tags:
      - attributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttributeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttributeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: ''
    get:
      operationId: attributes_list
      description: Returns attributes for the current organization.
      summary: List all attributes
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - attributes
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attribute'
          description: ''
  /attributes/{id}/:
    patch:
      operationId: attributes_partial_update
      description: Partially update an existing attribute. Staff only.
      summary: Partially update an attribute
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute.
        required: true
      tags:
      - attributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAttributeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAttributeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAttributeRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: ''
    delete:
      operationId: attributes_destroy
      description: Delete an attribute. Staff only.
      summary: Delete an attribute
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute.
        required: true
      tags:
      - attributes
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: attributes_retrieve
      description: Returns details of a specific attribute.
      summary: Get a specific attribute
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute.
        required: true
      tags:
      - attributes
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: ''
    put:
      operationId: attributes_update
      description: Update an existing attribute. Staff only.
      summary: Update an attribute
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute.
        required: true
      tags:
      - attributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttributeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttributeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: ''
  /attribute-groups/:
    post:
      operationId: attribute_groups_create
      description: Create a new attribute group for the current organization. Staff
        only.
      summary: Create a new attribute group
      tags:
      - attribute-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttributeGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttributeGroupRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroup'
          description: ''
    get:
      operationId: attribute_groups_list
      description: Returns attribute groups for the current organization.
      summary: List attribute groups
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - attribute-groups
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeGroup'
          description: ''
  /attribute-groups/reorder/:
    post:
      operationId: attribute_groups_reorder_create
      description: |-
        Reorder all attribute groups
        Request body should contain a list of group IDs in the desired order.
        Example: {"group_ids": [5, 1, 3, 2, 4]}
      tags:
      - attribute-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttributeGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttributeGroupRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroup'
          description: ''
  /attribute-groups/{id}/:
    patch:
      operationId: attribute_groups_partial_update
      description: Partially update an existing attribute group. Staff only.
      summary: Partially update an attribute group
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute group.
        required: true
      tags:
      - attribute-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAttributeGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAttributeGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAttributeGroupRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroup'
          description: ''
    delete:
      operationId: attribute_groups_destroy
      description: Delete an attribute group. Staff only.
      summary: Delete an attribute group
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute group.
        required: true
      tags:
      - attribute-groups
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: attribute_groups_retrieve
      description: Returns details of a specific attribute group.
      summary: Get a specific attribute group
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute group.
        required: true
      tags:
      - attribute-groups
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroup'
          description: ''
    put:
      operationId: attribute_groups_update
      description: Update an existing attribute group. Staff only.
      summary: Update an attribute group
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute group.
        required: true
      tags:
      - attribute-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttributeGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttributeGroupRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroup'
          description: ''
  /attribute-groups/{id}/add-item/:
    post:
      operationId: attribute_groups_add_item_create
      description: |-
        Add a single attribute to a group without affecting other attributes.
        This is a simpler alternative to the full PATCH operation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute group.
        required: true
      tags:
      - attribute-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttributeGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttributeGroupRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroup'
          description: ''
  /attribute-groups/{id}/items/{item_id}/:
    delete:
      operationId: attribute_groups_items_destroy
      description: Delete ONE item from the group, leaving the rest intact and re-ordering.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute group.
        required: true
      - in: path
        name: item_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - attribute-groups
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /attribute-groups/{id}/reorder_items/:
    post:
      operationId: attribute_groups_reorder_items_create
      description: |-
        Reorder items within an attribute group
        Request body should contain a list of item IDs in the desired order.
        Example: {"item_ids": [5, 1, 3, 2, 4]}
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute group.
        required: true
      tags:
      - attribute-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttributeGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttributeGroupRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroup'
          description: ''
  /products/{product_pk}/assets/:
    post:
      operationId: products_assets_create
      description: |-
        Nested under /products/<product_pk>/assets/.
        Handles upload, delete, reorder and set-primary.
      parameters:
      - in: path
        name: product_pk
        schema:
          type: integer
        required: true
      tags:
      - products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductAssetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductAssetRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductAssetRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAsset'
          description: ''
    get:
      operationId: products_assets_list
      description: |-
        Nested under /products/<product_pk>/assets/.
        Handles upload, delete, reorder and set-primary.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: product_pk
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductAsset'
          description: ''
  /products/{product_pk}/assets/reorder/:
    post:
      operationId: products_assets_reorder_create
      description: 'POST body: [{id: 3, order: 1}, …]'
      parameters:
      - in: path
        name: product_pk
        schema:
          type: integer
        required: true
      tags:
      - products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductAssetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductAssetRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductAssetRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAsset'
          description: ''
  /products/{product_pk}/assets/{id}/:
    patch:
      operationId: products_assets_partial_update
      description: |-
        Nested under /products/<product_pk>/assets/.
        Handles upload, delete, reorder and set-primary.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product asset.
        required: true
      - in: path
        name: product_pk
        schema:
          type: integer
        required: true
      tags:
      - products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductAssetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductAssetRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductAssetRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAsset'
          description: ''
    delete:
      operationId: products_assets_destroy
      description: |-
        Nested under /products/<product_pk>/assets/.
        Handles upload, delete, reorder and set-primary.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product asset.
        required: true
      - in: path
        name: product_pk
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: products_assets_retrieve
      description: |-
        Nested under /products/<product_pk>/assets/.
        Handles upload, delete, reorder and set-primary.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product asset.
        required: true
      - in: path
        name: product_pk
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAsset'
          description: ''
    put:
      operationId: products_assets_update
      description: |-
        Nested under /products/<product_pk>/assets/.
        Handles upload, delete, reorder and set-primary.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product asset.
        required: true
      - in: path
        name: product_pk
        schema:
          type: integer
        required: true
      tags:
      - products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductAssetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductAssetRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductAssetRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAsset'
          description: ''
  /products/{product_pk}/assets/{id}/set_primary/:
    post:
      operationId: products_assets_set_primary_create
      description: |-
        Nested under /products/<product_pk>/assets/.
        Handles upload, delete, reorder and set-primary.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product asset.
        required: true
      - in: path
        name: product_pk
        schema:
          type: integer
        required: true
      tags:
      - products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductAssetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductAssetRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductAssetRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAsset'
          description: ''
  /products/{product_pk}/attributes/:
    post:
      operationId: products_attributes_create
      description: Create a new attribute value for the current organization. Staff
        only.
      summary: Create a new attribute value
      parameters:
      - in: path
        name: product_pk
        schema:
          type: integer
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeValueRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttributeValueRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttributeValueRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeValue'
          description: ''
    get:
      operationId: products_attributes_list
      description: Returns attribute values for the current organization.
      summary: List all attribute values
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: product_pk
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeValueDetail'
          description: ''
  /products/{product_pk}/attributes/bulk_create/:
    post:
      operationId: products_attributes_bulk_create_create
      description: Create multiple attribute values at once
      parameters:
      - in: path
        name: product_pk
        schema:
          type: integer
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeValueRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttributeValueRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttributeValueRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeValue'
          description: ''
  /products/{product_pk}/attributes/{id}/:
    patch:
      operationId: products_attributes_partial_update
      description: Partially update an existing attribute value. Staff only.
      summary: Partially update an attribute value
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute value.
        required: true
      - in: path
        name: product_pk
        schema:
          type: integer
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAttributeValueRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAttributeValueRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAttributeValueRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeValue'
          description: ''
    delete:
      operationId: products_attributes_destroy
      description: Delete an attribute value. Staff only.
      summary: Delete an attribute value
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute value.
        required: true
      - in: path
        name: product_pk
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: products_attributes_retrieve
      description: Returns details of a specific attribute value.
      summary: Get a specific attribute value
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute value.
        required: true
      - in: path
        name: product_pk
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeValueDetail'
          description: ''
    put:
      operationId: products_attributes_update
      description: Update an existing attribute value. Staff only.
      summary: Update an attribute value
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute value.
        required: true
      - in: path
        name: product_pk
        schema:
          type: integer
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeValueRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttributeValueRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttributeValueRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeValue'
          description: ''
  /products/{product_pk}/attribute-groups/:
    get:
      operationId: products_attribute_groups_list
      description: Returns attribute groups with their values for a specific product.
      summary: Get attribute groups with values for a product
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: product_pk
        schema:
          type: string
        required: true
      tags:
      - Attributes - Groups
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeGroup'
          description: ''
  /products/{product_pk}/attribute-groups/{id}/:
    get:
      operationId: products_attribute_groups_retrieve
      description: |-
        API endpoint for retrieving product attribute groups with values.
        This is a read-only endpoint.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute group.
        required: true
      - in: path
        name: product_pk
        schema:
          type: string
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroup'
          description: ''
  /products/{product_pk}/activities/:
    get:
      operationId: products_activities_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: product_pk
        schema:
          type: string
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductActivity'
          description: ''
  /products/{product_pk}/price-history/:
    get:
      operationId: products_price_history_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: product_pk
        schema:
          type: string
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductPriceHistory'
          description: ''
  /products/{product_pk}/versions/:
    get:
      operationId: products_versions_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: product_pk
        schema:
          type: string
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductVersion'
          description: ''
  /products/sku-check/:
    post:
      operationId: products_sku_check_create
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /products/{product_id}/pdf/:
    get:
      operationId: products_pdf_retrieve
      description: Generate a PDF for a product specification
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /imports/:
    post:
      operationId: imports_create
      description: |-
        ViewSet for managing product import tasks.

        Supports creating new import tasks, retrieving status, listing all tasks,
        canceling tasks, and generating reports of imported data.
      tags:
      - imports
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImportTaskRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ImportTaskRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImportTaskRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportTask'
          description: ''
    get:
      operationId: imports_list
      description: |-
        ViewSet for managing product import tasks.

        Supports creating new import tasks, retrieving status, listing all tasks,
        canceling tasks, and generating reports of imported data.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - imports
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImportTask'
          description: ''
  /imports/{id}/:
    get:
      operationId: imports_retrieve
      description: |-
        ViewSet for managing product import tasks.

        Supports creating new import tasks, retrieving status, listing all tasks,
        canceling tasks, and generating reports of imported data.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this import task.
        required: true
      tags:
      - imports
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportTask'
          description: ''
  /imports/{id}/cancel/:
    post:
      operationId: imports_cancel_create
      description: |-
        Cancel an in-progress import task.
        Only tasks in 'queued' or 'running' state can be canceled.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this import task.
        required: true
      tags:
      - imports
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImportTaskRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ImportTaskRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImportTaskRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportTask'
          description: ''
  /imports/{id}/get_report/:
    get:
      operationId: imports_get_report_retrieve
      description: Download the error report for an import task.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this import task.
        required: true
      tags:
      - imports
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportTask'
          description: ''
  /imports/{id}/preview/:
    get:
      operationId: imports_preview_retrieve
      description: Preview the first 10 rows of the CSV or Excel file.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this import task.
        required: true
      tags:
      - imports
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportTask'
          description: ''
  /reports/themes/:
    get:
      operationId: reports_themes_list
      description: Public list of available report themes.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - reports
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportTheme'
          description: ''
  /reports/themes/{id}/:
    get:
      operationId: reports_themes_retrieve
      description: Public list of available report themes.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report theme.
        required: true
      tags:
      - reports
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTheme'
          description: ''
  /analytics/categories/:
    get:
      operationId: analytics_categories_retrieve
      description: Returns available product categories for filtering
      tags:
      - analytics
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /analytics/change-history/:
    get:
      operationId: analytics_change_history_retrieve
      description: Returns change history/audit trail data
      tags:
      - analytics
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /analytics/channels/:
    get:
      operationId: analytics_channels_retrieve
      description: Returns available channels for filtering
      tags:
      - analytics
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /analytics/completeness/:
    get:
      operationId: analytics_completeness_retrieve
      description: Returns data about product data completeness across attributes
        and categories
      tags:
      - analytics
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /analytics/enrichment-velocity/:
    get:
      operationId: analytics_enrichment_velocity_retrieve
      description: Returns data about enrichment velocity (edits per day)
      tags:
      - analytics
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /analytics/locales/:
    get:
      operationId: analytics_locales_retrieve
      description: Returns available locales for filtering
      tags:
      - analytics
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /analytics/localization-quality/:
    get:
      operationId: analytics_localization_quality_retrieve
      description: Returns data about localization quality by locale
      tags:
      - analytics
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /analytics/readiness/:
    get:
      operationId: analytics_readiness_retrieve
      description: Returns data about product readiness for different channels
      tags:
      - analytics
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /completeness-export/:
    get:
      operationId: completeness_export_retrieve
      description: Direct function-based view for exporting completeness report
      tags:
      - completeness-export
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /readiness-export/:
    get:
      operationId: readiness_export_retrieve
      description: Direct function-based view for exporting readiness report
      tags:
      - readiness-export
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /enrichment-velocity-export/:
    get:
      operationId: enrichment_velocity_export_retrieve
      description: Direct function-based view for exporting enrichment velocity report
      tags:
      - enrichment-velocity-export
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /localization-quality-export/:
    get:
      operationId: localization_quality_export_retrieve
      description: Direct function-based view for exporting localization quality report
      tags:
      - localization-quality-export
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /change-history-export/:
    get:
      operationId: change_history_export_retrieve
      description: Direct function-based view for exporting change history report
      tags:
      - change-history-export
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /orgs/{org_id}/roles/:
    post:
      operationId: orgs_roles_create
      parameters:
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoleRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    get:
      operationId: orgs_roles_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
          description: ''
  /orgs/{org_id}/roles/{id}/:
    patch:
      operationId: orgs_roles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRoleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRoleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRoleRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    delete:
      operationId: orgs_roles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: orgs_roles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    put:
      operationId: orgs_roles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoleRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
  /orgs/{org_id}/memberships/:
    post:
      operationId: orgs_memberships_create
      description: |-
        Invite a user to the organization. If user doesn't exist, creates the account.

        Expected payload:
        {
            "email": "user@example.com",
            "role_id": 1
        }
      parameters:
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MembershipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MembershipRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
          description: ''
    get:
      operationId: orgs_memberships_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Membership'
          description: ''
  /orgs/{org_id}/memberships/invites/:
    get:
      operationId: orgs_memberships_invites_retrieve
      parameters:
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
          description: ''
  /orgs/{org_id}/memberships/{id}/:
    patch:
      operationId: orgs_memberships_partial_update
      description: Update a membership (e.g., change role) and log the change
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this membership.
        required: true
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMembershipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMembershipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMembershipRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
          description: ''
    delete:
      operationId: orgs_memberships_destroy
      description: Remove a membership and log the action
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this membership.
        required: true
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: orgs_memberships_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this membership.
        required: true
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
          description: ''
    put:
      operationId: orgs_memberships_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this membership.
        required: true
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MembershipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MembershipRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
          description: ''
  /orgs/{org_id}/memberships/{id}/accept/:
    post:
      operationId: orgs_memberships_accept_create
      description: |-
        Accept an invitation to join an organization.

        Expected payload:
        {
            "name": "Full Name",
            "password": "securepassword",
            "password_confirm": "securepassword",
            "invitation_token": "token"
        }
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this membership.
        required: true
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MembershipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MembershipRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
          description: ''
  /orgs/{org_id}/memberships/{id}/check_invitation/:
    get:
      operationId: orgs_memberships_check_invitation_retrieve
      description: |-
        Check if an invitation is valid without requiring authentication.
        Used when a user follows an invitation link to verify the email and determine next steps.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this membership.
        required: true
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
          description: ''
  /orgs/{org_id}/memberships/{id}/resend_invite/:
    post:
      operationId: orgs_memberships_resend_invite_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this membership.
        required: true
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MembershipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MembershipRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
          description: ''
  /orgs/{org_id}/audit/:
    get:
      operationId: orgs_audit_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLog'
          description: ''
  /orgs/{org_id}/audit/{id}/:
    get:
      operationId: orgs_audit_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this audit log.
        required: true
      - in: path
        name: org_id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLog'
          description: ''
  /orgs/memberships/{id}/check/:
    get:
      operationId: orgs_memberships_check_retrieve
      description: |-
        Check if an invitation is valid without requiring authentication.
        Used when a user follows an invitation link to verify the email and determine next steps.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - orgs
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
          description: ''
  /register/:
    post:
      operationId: register_create
      description: API View for user registration
      tags:
      - register
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /login/:
    post:
      operationId: login_create
      description: API View for user login
      tags:
      - login
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /logout/:
    post:
      operationId: logout_create
      description: API View for user logout - blacklists the refresh token
      tags:
      - logout
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /set-password/:
    post:
      operationId: set_password_create
      description: API View for setting password for existing users (typically from
        invitation)
      tags:
      - set-password
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /check-user/:
    post:
      operationId: check_user_create
      description: API View to check if a user exists and needs to set a password
      tags:
      - check-user
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /user/:
    get:
      operationId: user_retrieve
      description: API View to retrieve authenticated user information
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /users/:
    get:
      operationId: users_list
      description: API View to list all users (admin only)
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /users/me/:
    get:
      operationId: users_me_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /test-db/:
    get:
      operationId: test_db_retrieve
      tags:
      - test-db
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    ActionEnum:
      enum:
      - invite
      - role_change
      - remove
      type: string
      description: |-
        * `invite` - Invite Sent
        * `role_change` - Role Changed
        * `remove` - User Removed
    Attribute:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          description: Slug-like unique identifier per organization
          maxLength: 64
        label:
          type: string
          maxLength: 255
        data_type:
          $ref: '#/components/schemas/DataTypeEnum'
        is_localisable:
          type: boolean
        is_scopable:
          type: boolean
        organization:
          type: integer
          readOnly: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
      required:
      - code
      - created_by
      - data_type
      - id
      - label
      - organization
    AttributeGroup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 80
        order:
          type: integer
          maximum: 32767
          minimum: 0
        items:
          type: array
          items:
            $ref: '#/components/schemas/AttributeGroupItem'
      required:
      - id
      - name
    AttributeGroupItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        attribute:
          type: integer
        order:
          type: integer
          maximum: 32767
          minimum: 0
      required:
      - attribute
      - id
    AttributeGroupItemRequest:
      type: object
      properties:
        attribute:
          type: integer
        order:
          type: integer
          maximum: 32767
          minimum: 0
      required:
      - attribute
    AttributeGroupRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 80
        order:
          type: integer
          maximum: 32767
          minimum: 0
        items:
          type: array
          items:
            $ref: '#/components/schemas/AttributeGroupItemRequest'
      required:
      - name
    AttributeRequest:
      type: object
      properties:
        code:
          type: string
          minLength: 1
          description: Slug-like unique identifier per organization
          maxLength: 64
        label:
          type: string
          minLength: 1
          maxLength: 255
        data_type:
          $ref: '#/components/schemas/DataTypeEnum'
        is_localisable:
          type: boolean
        is_scopable:
          type: boolean
      required:
      - code
      - data_type
      - label
    AttributeValue:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        locale:
          type: string
          nullable: true
          maxLength: 10
        channel:
          type: string
          nullable: true
          maxLength: 32
        value:
          type: object
          additionalProperties: {}
        organization:
          type: integer
          readOnly: true
        product:
          type: integer
        attribute:
          type: integer
        created_by:
          type: integer
          readOnly: true
          nullable: true
      required:
      - attribute
      - created_by
      - id
      - organization
      - product
      - value
    AttributeValueDetail:
      type: object
      description: |-
        Serializer for attribute values with more detailed attribute information.
        Used for list and retrieve actions.
      properties:
        id:
          type: integer
          readOnly: true
        attribute:
          type: integer
        product:
          type: integer
        organization:
          type: integer
          readOnly: true
        value:
          type: object
          additionalProperties: {}
        locale:
          type: string
          nullable: true
          maxLength: 10
        channel:
          type: string
          nullable: true
          maxLength: 32
        attribute_code:
          type: string
          readOnly: true
        attribute_label:
          type: string
          readOnly: true
        attribute_type:
          type: string
          readOnly: true
      required:
      - attribute
      - attribute_code
      - attribute_label
      - attribute_type
      - id
      - organization
      - product
      - value
    AttributeValueRequest:
      type: object
      properties:
        locale:
          type: string
          nullable: true
          maxLength: 10
        channel:
          type: string
          nullable: true
          maxLength: 32
        value:
          type: object
          additionalProperties: {}
        product:
          type: integer
        attribute:
          type: integer
      required:
      - attribute
      - product
      - value
    AuditLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        action:
          $ref: '#/components/schemas/ActionEnum'
        user:
          type: integer
          nullable: true
        organization:
          type: integer
          nullable: true
        target_type:
          type: string
          maxLength: 50
        target_id:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
          readOnly: true
        details:
          type: object
          additionalProperties: {}
      required:
      - action
      - id
      - target_id
      - target_type
      - timestamp
    DataTypeEnum:
      enum:
      - text
      - number
      - boolean
      - date
      - select
      type: string
      description: |-
        * `text` - Text
        * `number` - Number
        * `boolean` - Boolean
        * `date` - Date
        * `select` - Select
    DuplicateStrategyEnum:
      enum:
      - skip
      - overwrite
      - abort
      type: string
      description: |-
        * `skip` - Skip
        * `overwrite` - Overwrite
        * `abort` - Abort
    ImportTask:
      type: object
      description: |-
        Serializer for the ImportTask model.
        Includes calculated fields for progress percentage and status display.
      properties:
        id:
          type: integer
          readOnly: true
        csv_file:
          type: string
          format: uri
        mapping:
          type: object
          additionalProperties: {}
        duplicate_strategy:
          allOf:
          - $ref: '#/components/schemas/DuplicateStrategyEnum'
          description: |-
            Strategy for handling duplicate SKUs

            * `skip` - Skip
            * `overwrite` - Overwrite
            * `abort` - Abort
        status:
          allOf:
          - $ref: '#/components/schemas/ImportTaskStatusEnum'
          readOnly: true
        status_display:
          type: string
          readOnly: true
        processed:
          type: integer
          readOnly: true
        total_rows:
          type: integer
          readOnly: true
          nullable: true
        progress_percentage:
          type: integer
          readOnly: true
        error_file:
          type: string
          format: uri
          readOnly: true
          nullable: true
        error_file_url:
          type: string
          readOnly: true
        execution_time:
          type: number
          format: double
          readOnly: true
          nullable: true
          description: Execution time in seconds
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - csv_file
      - error_file
      - error_file_url
      - execution_time
      - id
      - mapping
      - processed
      - progress_percentage
      - status
      - status_display
      - total_rows
    ImportTaskRequest:
      type: object
      description: |-
        Serializer for the ImportTask model.
        Includes calculated fields for progress percentage and status display.
      properties:
        csv_file:
          type: string
          format: binary
        mapping:
          type: object
          additionalProperties: {}
        duplicate_strategy:
          allOf:
          - $ref: '#/components/schemas/DuplicateStrategyEnum'
          description: |-
            Strategy for handling duplicate SKUs

            * `skip` - Skip
            * `overwrite` - Overwrite
            * `abort` - Abort
      required:
      - csv_file
      - mapping
    ImportTaskStatusEnum:
      enum:
      - queued
      - running
      - success
      - partial_success
      - error
      type: string
      description: |-
        * `queued` - Queued
        * `running` - Running
        * `success` - Success
        * `partial_success` - Partial Success
        * `error` - Error
    Membership:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        user_email:
          type: string
          format: email
          readOnly: true
        user_name:
          type: string
          readOnly: true
        avatar_url:
          type: string
          readOnly: true
        role:
          allOf:
          - $ref: '#/components/schemas/Role'
          readOnly: true
        role_id:
          type: integer
        status:
          $ref: '#/components/schemas/MembershipStatusEnum'
        invited_at:
          type: string
          format: date-time
          readOnly: true
        organization:
          type: integer
      required:
      - avatar_url
      - id
      - invited_at
      - role
      - role_id
      - user
      - user_email
      - user_name
    MembershipRequest:
      type: object
      properties:
        role_id:
          type: integer
        status:
          $ref: '#/components/schemas/MembershipStatusEnum'
        organization:
          type: integer
      required:
      - role_id
    MembershipStatusEnum:
      enum:
      - pending
      - active
      type: string
      description: |-
        * `pending` - Pending
        * `active` - Active
    PaginatedProductEventList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductEvent'
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PatchedAttributeGroupRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 80
        order:
          type: integer
          maximum: 32767
          minimum: 0
        items:
          type: array
          items:
            $ref: '#/components/schemas/AttributeGroupItemRequest'
    PatchedAttributeRequest:
      type: object
      properties:
        code:
          type: string
          minLength: 1
          description: Slug-like unique identifier per organization
          maxLength: 64
        label:
          type: string
          minLength: 1
          maxLength: 255
        data_type:
          $ref: '#/components/schemas/DataTypeEnum'
        is_localisable:
          type: boolean
        is_scopable:
          type: boolean
    PatchedAttributeValueRequest:
      type: object
      properties:
        locale:
          type: string
          nullable: true
          maxLength: 10
        channel:
          type: string
          nullable: true
          maxLength: 32
        value:
          type: object
          additionalProperties: {}
        product:
          type: integer
        attribute:
          type: integer
    PatchedMembershipRequest:
      type: object
      properties:
        role_id:
          type: integer
        status:
          $ref: '#/components/schemas/MembershipStatusEnum'
        organization:
          type: integer
    PatchedProductAssetRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
        asset_type:
          type: string
          minLength: 1
          description: Type of asset (image, video, document, etc.)
          maxLength: 20
        name:
          type: string
          nullable: true
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Order in which assets are displayed
        is_primary:
          type: boolean
          description: Is this the main asset for the product?
        content_type:
          type: string
          nullable: true
          description: MIME type of the file
          maxLength: 100
        file_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Size of the file in bytes
        uploaded_by:
          type: integer
          nullable: true
    PatchedProductRequest:
      type: object
      description: Serializer for Product model
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        sku:
          type: string
          minLength: 1
          maxLength: 50
        description:
          type: string
          nullable: true
        price:
          type: number
          format: double
        category:
          type: string
          nullable: true
          maxLength: 100
        brand:
          type: string
          nullable: true
          maxLength: 100
        barcode:
          type: string
          nullable: true
          maxLength: 100
        tags:
          type: array
          items:
            type: string
            minLength: 1
        is_active:
          type: boolean
        is_archived:
          type: boolean
        primary_image:
          type: string
          format: binary
          nullable: true
    PatchedRoleRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        description:
          type: string
        permissions:
          type: object
          additionalProperties: {}
    Product:
      type: object
      description: Serializer for Product model
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        sku:
          type: string
          maxLength: 50
        description:
          type: string
          nullable: true
        price:
          type: number
          format: double
        category:
          type: string
          nullable: true
          maxLength: 100
        brand:
          type: string
          nullable: true
          maxLength: 100
        barcode:
          type: string
          nullable: true
          maxLength: 100
        tags:
          type: array
          items:
            type: string
        attribute_values:
          type: string
          readOnly: true
        is_active:
          type: boolean
        is_archived:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        primary_image:
          type: string
          format: uri
          nullable: true
        completeness_percent:
          type: string
          readOnly: true
        missing_fields:
          type: string
          readOnly: true
        assets:
          type: string
          readOnly: true
        has_primary_image:
          type: string
          readOnly: true
        primary_image_url:
          type: string
          readOnly: true
        primary_asset:
          type: string
          readOnly: true
        organization:
          type: integer
          readOnly: true
          nullable: true
        created_by:
          type: string
          format: email
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          readOnly: true
        primary_image_thumb:
          type: string
          readOnly: true
        primary_image_large:
          type: string
          readOnly: true
      required:
      - assets
      - attribute_values
      - completeness_percent
      - created_at
      - created_by
      - has_primary_image
      - id
      - images
      - missing_fields
      - name
      - organization
      - price
      - primary_asset
      - primary_image_large
      - primary_image_thumb
      - primary_image_url
      - sku
      - updated_at
    ProductActivity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
        user:
          type: string
        timestamp:
          type: string
          format: date-time
        details:
          type: string
      required:
      - details
      - id
      - timestamp
      - type
      - user
    ProductAsset:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file:
          type: string
          format: uri
        file_url:
          type: string
          readOnly: true
        asset_type:
          type: string
          description: Type of asset (image, video, document, etc.)
          maxLength: 20
        name:
          type: string
          nullable: true
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Order in which assets are displayed
        is_primary:
          type: boolean
          description: Is this the main asset for the product?
        content_type:
          type: string
          nullable: true
          description: MIME type of the file
          maxLength: 100
        file_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Size of the file in bytes
        file_size_formatted:
          type: string
          readOnly: true
        uploaded_by:
          type: integer
          nullable: true
        uploaded_by_name:
          type: string
          readOnly: true
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
        product:
          type: integer
          readOnly: true
      required:
      - file
      - file_size_formatted
      - file_url
      - id
      - product
      - uploaded_at
      - uploaded_by_name
    ProductAssetRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
        asset_type:
          type: string
          minLength: 1
          description: Type of asset (image, video, document, etc.)
          maxLength: 20
        name:
          type: string
          nullable: true
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Order in which assets are displayed
        is_primary:
          type: boolean
          description: Is this the main asset for the product?
        content_type:
          type: string
          nullable: true
          description: MIME type of the file
          maxLength: 100
        file_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Size of the file in bytes
        uploaded_by:
          type: integer
          nullable: true
      required:
      - file
    ProductEvent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        event_type:
          type: string
          maxLength: 50
        summary:
          type: string
          maxLength: 255
        payload:
          type: object
          additionalProperties: {}
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
      required:
      - created_at
      - created_by_name
      - event_type
      - id
      - summary
    ProductImage:
      type: object
      description: Serializer for product images
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Order in which images are displayed
        is_primary:
          type: boolean
          description: Is this the main image for the product?
      required:
      - id
      - url
    ProductImageRequest:
      type: object
      description: Serializer for product images
      properties:
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Order in which images are displayed
        is_primary:
          type: boolean
          description: Is this the main image for the product?
    ProductPriceHistory:
      type: object
      properties:
        date:
          type: string
          format: date-time
        oldPrice:
          type: string
          default: '0.00'
        newPrice:
          type: string
          default: '0.00'
        user:
          type: string
          default: system
    ProductRequest:
      type: object
      description: Serializer for Product model
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        sku:
          type: string
          minLength: 1
          maxLength: 50
        description:
          type: string
          nullable: true
        price:
          type: number
          format: double
        category:
          type: string
          nullable: true
          maxLength: 100
        brand:
          type: string
          nullable: true
          maxLength: 100
        barcode:
          type: string
          nullable: true
          maxLength: 100
        tags:
          type: array
          items:
            type: string
            minLength: 1
        is_active:
          type: boolean
        is_archived:
          type: boolean
        primary_image:
          type: string
          format: binary
          nullable: true
      required:
      - name
      - price
      - sku
    ProductVersion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        version:
          type: string
        timestamp:
          type: string
          format: date-time
        user:
          type: string
        summary:
          type: string
      required:
      - id
      - summary
      - timestamp
      - user
      - version
    ReportTheme:
      type: object
      properties:
        slug:
          type: string
          maxLength: 64
          pattern: ^[-a-zA-Z0-9_]+$
        name:
          type: string
          maxLength: 128
        description:
          type: string
      required:
      - name
      - slug
    Role:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        description:
          type: string
        permissions:
          type: object
          additionalProperties: {}
      required:
      - id
      - name
    RoleRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        description:
          type: string
        permissions:
          type: object
          additionalProperties: {}
      required:
      - name
    TokenObtainPair:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    TokenObtainPairRequest:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        name:
          type: string
          maxLength: 255
        is_active:
          type: boolean
          readOnly: true
        is_staff:
          type: boolean
          readOnly: true
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_superuser:
          type: boolean
          readOnly: true
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        organization_id:
          type: string
          readOnly: true
        role:
          type: string
          readOnly: true
        avatar_url:
          type: string
          readOnly: true
      required:
      - avatar_url
      - email
      - id
      - is_active
      - is_staff
      - is_superuser
      - name
      - organization_id
      - role
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
