# Generated by Django 4.2.7 on 2025-05-09 19:23

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('organizations', '0013_add_organization_fk_to_auditlog'),
        ('products', '10005_productrelation_notes'),
    ]

    operations = [
        migrations.CreateModel(
            name='SalesChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='organizations.organization')),
            ],
            options={
                'verbose_name': 'Sales Channel',
                'verbose_name_plural': 'Sales Channels',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_type', models.CharField(choices=[('list', 'List Price'), ('cost', 'Cost Price'), ('msrp', 'MSRP'), ('promo', 'Promotional Price')], default='list', max_length=20)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.saleschannel')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='organizations.organization')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='products.product')),
            ],
            options={
                'verbose_name': 'Product Price',
                'verbose_name_plural': 'Product Prices',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='saleschannel',
            index=models.Index(fields=['code'], name='products_sa_code_fc9b71_idx'),
        ),
        migrations.AddIndex(
            model_name='saleschannel',
            index=models.Index(fields=['organization'], name='products_sa_organiz_d8743a_idx'),
        ),
        migrations.AddIndex(
            model_name='productprice',
            index=models.Index(fields=['product'], name='products_pr_product_c3dc9b_idx'),
        ),
        migrations.AddIndex(
            model_name='productprice',
            index=models.Index(fields=['price_type'], name='products_pr_price_t_8b3fcf_idx'),
        ),
        migrations.AddIndex(
            model_name='productprice',
            index=models.Index(fields=['channel'], name='products_pr_channel_d7428f_idx'),
        ),
        migrations.AddIndex(
            model_name='productprice',
            index=models.Index(fields=['organization'], name='products_pr_organiz_473816_idx'),
        ),
        migrations.AddIndex(
            model_name='productprice',
            index=models.Index(fields=['valid_from', 'valid_to'], name='products_pr_valid_f_ea15b0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productprice',
            unique_together={('product', 'price_type', 'channel', 'currency')},
        ),
    ]
