# Generated by Django 4.2.7 on 2025-05-09 19:24

from django.db import migrations, models
from django.utils import timezone


def backfill_product_prices(apps, schema_editor):
    """
    Migrate data from the legacy Product.price field to the new ProductPrice model.
    Creates a 'list' price entry for each product with the value from the legacy price field.
    """
    Product = apps.get_model('products', 'Product')
    ProductPrice = apps.get_model('products', 'ProductPrice')
    
    # Log migration start
    print("Starting price data migration...")
    
    # Counter for tracking progress
    counter = 0
    skipped = 0
    now = timezone.now()
    
    # For each product, create a corresponding ProductPrice of type 'list'
    for product in Product.objects.all():
        # Skip products with no price (use default 0.00)
        if product.price is None:
            skipped += 1
            continue
            
        # Create the price entry
        try:
            ProductPrice.objects.create(
                product=product,
                price_type='list',    # Default 'list' price type
                currency='USD',       # Default to USD
                amount=product.price,
                valid_from=now,       # Current price is valid from now
                valid_to=None,        # Valid indefinitely
                organization=product.organization
            )
            counter += 1
            
            # Print progress every 100 records
            if counter % 100 == 0:
                print(f"Migrated {counter} product prices...")
                
        except Exception as e:
            print(f"Error migrating price for product {product.id} ({product.name}): {str(e)}")
    
    # Log migration completion
    print(f"Price migration complete. Migrated {counter} prices, skipped {skipped} products with no price.")


def reverse_migration(apps, schema_editor):
    """
    Reverse migration: no action needed as we're keeping the price field for now.
    When we eventually remove the price field, we'll ensure the data is already migrated.
    """
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('products', '10006_add_price_models'),
    ]

    operations = [
        migrations.RunPython(
            backfill_product_prices,
            reverse_migration
        ),
        # After backfilling, make the price field optional
        migrations.AlterField(
            model_name='product',
            name='price',
            field=models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True),
        ),
    ]
