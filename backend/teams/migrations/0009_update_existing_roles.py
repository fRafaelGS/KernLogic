# Generated by Django 3.2.10 on 2023-07-25 19:45

from django.db import migrations
from teams.constants import DEFAULT_ROLE_PERMISSIONS

def update_existing_roles(apps, schema_editor):
    """Update any existing roles with the new permission structure"""
    Role = apps.get_model("teams", "Role")
    
    # Update global roles (if any)
    for role_name, perms in DEFAULT_ROLE_PERMISSIONS.items():
        # Update or create global roles (not linked to an organization)
        roles = Role.objects.filter(name=role_name, organization__isnull=True)
        for role in roles:
            role.permissions = perms
            role.save(update_fields=["permissions"])
    
    # Update organization-specific roles
    Organization = apps.get_model("organizations", "Organization")
    for org in Organization.objects.all():
        for role_name, perms in DEFAULT_ROLE_PERMISSIONS.items():
            # Try to find the role for this organization
            role = Role.objects.filter(name=role_name, organization=org).first()
            if role:
                role.permissions = perms
                role.save(update_fields=["permissions"])
            else:
                # Create the role if it doesn't exist
                Role.objects.create(
                    name=role_name,
                    organization=org,
                    permissions=perms,
                    description=f"Default {role_name} role"
                )

def reverse_migration(apps, schema_editor):
    """No need to reverse this migration"""
    pass

class Migration(migrations.Migration):

    dependencies = [
        ('teams', '0008_role_organization_alter_role_name_and_more'),
    ]

    operations = [
        migrations.RunPython(update_existing_roles, reverse_migration),
    ] 